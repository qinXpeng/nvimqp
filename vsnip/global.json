{
	"gmain": {
		"prefix": "gmain",
		"body": [
			"package main",
			"",
			"import (",
				"\t\"bufio\"",
				"\t\"fmt\"",
				"\t\"os\"",
				"\t\"strconv\"",
			")",
			"",
			"func main() {",
			"\t$0",
			"}",
			"",
			"var sc *bufio.Scanner",
			"",
			"func init() {",
				"\tfile, err := os.Open(\"in\")",
				"\tif err != nil {",
					"\t\tfile = os.Stdin",
				"\t}",
				"\tsc = bufio.NewScanner(file)",
				"\tmaxLen := int(1e6 + 5)",
				"\tsc.Buffer(make([]byte, maxLen), maxLen)",
				"\tsc.Split(bufio.ScanWords)",
			"}",
			"func nextInfo() string {",
				"\tsc.Scan()",
				"\treturn sc.Text()",
			"}",
			"func scanf(ioval ...interface{}) (err error) {",
				"\tfor _, val := range ioval {",
					"\t\ts := nextInfo()",
					"\t\tswitch v := val.(type) {",
					"\t\tcase *int:",
						"\t\t\t*v, err = strconv.Atoi(s)",
					"\t\tcase *int64:",
						"\t\t\t*v, err = strconv.ParseInt(s, 10, 64)",
					"\t\tcase *string:",
						"\t\t\t*v, err = s, nil",
					"\t\tcase *float64:",
						"\t\t\t*v, err = strconv.ParseFloat(s, 64)",
					"\t\t}",
				"\t}",
				"\treturn",
			"}",
			"func printf(ioval ...interface{}) (n int, err error) {",
				"\treturn fmt.Fprintln(os.Stdout, ioval...)",
			"}",
			"func sprintf(format string, ioval ...interface{}) (n int, err error) {",
				"\treturn fmt.Fprintf(os.Stdout, format, ioval...)",
			"}",
			"func max(a, b int) int {",
				"\tif a >= b {",
					"\t\treturn a",
				"\t}",
				"\treturn b",
			"}",
			"func min(a, b int) int {",
				"\treturn a + b - max(a, b)", 
			"}"
		],
		"description": "gmain"
	},
	"cmain":{
		"prefix": "cmain",
		"body":[
			"#include<bits/stdc++.h>",
			"using namespace std;",
			"#define me(a,x) memset(a,x,sizeof(a))",
			"#define sc scanf",
			"#define pr printf",
			"#define IN freopen(\"in\",\"r\",stdin);",
			"#define OUT freopen(\"out\",\"w\",stdout);",
			"typedef long long ll;",
			"typedef unsigned long long ull;",
			"const int N=2e7+6;",
			"const int mod=1e9+7;",
			"int O(){putchar('\\n');return 0;}template<typename T,typename... Ty>",
			"int O(const T& a,const Ty&... b){cout<<a<<' ';return O(b...);}",
			"void I(){}template<typename T,typename... Ty>void I(T& a,Ty&... b){cin>>a;I(b...);}",
			"template<typename T>void db(T *bg,T *ed){while(bg!=ed)cout<<*bg++<<' ';pr(\"\\n\");}",
			"inline ll mul_64(ll x,ll y,ll c){return (x*y-(ll)((long double)x/c*y)*c+c)%c;}",
			"inline ll ksm(ll a,ll b,ll c){ll ans=1;for(;b;b>>=1,a=a*a%c)if(b&1)ans=ans*a%c;return ans;}",
			"int main(){}"
		],
		"description": "cmain"
	},
	"blog-title":{
		"prefix":"blog-title",
		"body":[
			"## {title}",
			"::: tip Describe",
			" {content}",
			"::: right",
			"[题目链接]()",
			":::"
		],
		"description": "blog-title"
	},
	"blog-code-one":{
		"prefix":"blog-code-one",
		"body":[
			"::: details Code",
			"```cpp",
			"```",
			":::"
		],
		"description": "blog-code-one"
	},
	"blog-code-two":{
		"prefix":"blog-code-two",
		"body":[
			"::: details Code",
			"<code-group>",
			"<code-block title=\"C++\" active>",
			"```cpp",
			"```",
			"</code-block>",
			"",
			"<code-block title=\"GO\">",
			"```go",
			"```",
			"</code-block>",
			"</code-group>",
			":::"
		],
		"description":"blog-code-two"
	}
}
